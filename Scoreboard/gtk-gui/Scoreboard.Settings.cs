
// This file has been generated by the GUI designer. Do not modify.
namespace Scoreboard
{
	public partial class Settings
	{
		private global::Gtk.Table table1;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.SpinButton spinbuttonLaps;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Scoreboard.Settings
			this.Name = "Scoreboard.Settings";
			this.Title = global::Mono.Unix.Catalog.GetString ("Settings");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.DefaultWidth = 800;
			this.DefaultHeight = 480;
			// Container child Scoreboard.Settings.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(3)), ((uint)(2)), true);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Number of Laps Per Race");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.spinbuttonLaps = new global::Gtk.SpinButton (5, 100, 1);
			this.spinbuttonLaps.CanFocus = true;
			this.spinbuttonLaps.Name = "spinbuttonLaps";
			this.spinbuttonLaps.Adjustment.PageIncrement = 10;
			this.spinbuttonLaps.ClimbRate = 1;
			this.spinbuttonLaps.Numeric = true;
			this.spinbuttonLaps.Value = 5;
			this.table1.Add (this.spinbuttonLaps);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.spinbuttonLaps]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.spinbuttonLaps.Changed += new global::System.EventHandler (this.OnSpinbuttonLapsChanged);
		}
	}
}
